Sub SplitRowsFromFileWithSummary()

    Dim fd As FileDialog
    Dim wbSource As Workbook, wbNew As Workbook
    Dim wsSource As Worksheet
    Dim newSheet As Worksheet
    Dim summarySheet As Worksheet
    Dim selectedFile As String
    Dim lastRow As Long, lastCol As Long
    Dim redFlagCol As Long
    Dim i As Long, j As Long
    Dim headerCell As Range, dataCell As Range
    Dim outputPath As String
    Dim summaryRow As Long

    ' Prompt user to select Excel file
    Set fd = Application.FileDialog(msoFileDialogFilePicker)
    fd.Title = "Select the Excel file"
    fd.Filters.Add "Excel Files", "*.xls; *.xlsx; *.xlsm", 1

    If fd.Show <> -1 Then
        MsgBox "No file selected.", vbExclamation
        Exit Sub
    End If

    selectedFile = fd.SelectedItems(1)

    ' Open source file
    Set wbSource = Workbooks.Open(selectedFile)
    Set wsSource = wbSource.Sheets(1) ' Change sheet name if needed

    ' Create new workbook
    Set wbNew = Workbooks.Add

    ' Add a summary sheet
    Set summarySheet = wbNew.Sheets(1)
    summarySheet.Name = "Summary"
    summarySheet.Cells(1, 1).Value = "Row Number"
    summarySheet.Cells(1, 2).Value = "Sheet Name"
    summaryRow = 2

    ' Find last row/column
    lastRow = wsSource.Cells(wsSource.Rows.Count, 1).End(xlUp).Row
    lastCol = wsSource.Cells(1, wsSource.Columns.Count).End(xlToLeft).Column

    ' Find 'red flag' column
    redFlagCol = 0
    For j = 1 To lastCol
        If Trim(LCase(wsSource.Cells(1, j).Value)) = "red flag" Then
            redFlagCol = j
            Exit For
        End If
    Next j

    If redFlagCol = 0 Then
        MsgBox "'red flag' column not found.", vbExclamation
        wbSource.Close SaveChanges:=False
        Exit Sub
    End If

    ' Loop through each row and create tabs
    For i = 2 To lastRow
        Dim sheetName As String
        sheetName = "Row_" & (i - 1)
        Set newSheet = wbNew.Sheets.Add(After:=wbNew.Sheets(wbNew.Sheets.Count))
        newSheet.Name = sheetName

        ' Copy headers with formatting
        For j = 1 To lastCol
            wsSource.Cells(1, j).Copy
            newSheet.Cells(1, j).PasteSpecial Paste:=xlPasteFormats
            newSheet.Cells(1, j).Value = wsSource.Cells(1, j).Value
        Next j

        ' Copy row data with formatting
        For j = 1 To lastCol
            wsSource.Cells(i, j).Copy
            newSheet.Cells(2, j).PasteSpecial Paste:=xlPasteFormats
            newSheet.Cells(2, j).Value = wsSource.Cells(i, j).Value
        Next j

        ' Headers after 'red flag' (row 4)
        For j = redFlagCol + 1 To lastCol
            wsSource.Cells(1, j).Copy
            newSheet.Cells(4, j - redFlagCol).PasteSpecial Paste:=xlPasteFormats
            newSheet.Cells(4, j - redFlagCol).Value = wsSource.Cells(1, j).Value
        Next j

        ' Data after 'red flag' (row 5)
        For j = redFlagCol + 1 To lastCol
            wsSource.Cells(i, j).Copy
            newSheet.Cells(5, j - redFlagCol).PasteSpecial Paste:=xlPasteFormats
            newSheet.Cells(5, j - redFlagCol).Value = wsSource.Cells(i, j).Value
        Next j

        ' Add entry to summary
        summarySheet.Cells(summaryRow, 1).Value = i - 1
        summarySheet.Cells(summaryRow, 2).Value = sheetName
        summaryRow = summaryRow + 1
    Next i

    Application.CutCopyMode = False

    ' Save new workbook
    outputPath = Left(selectedFile, InStrRev(selectedFile, ".")) & "split_with_summary.xlsx"
    wbNew.SaveAs Filename:=outputPath
    wbNew.Close SaveChanges:=False
    wbSource.Close SaveChanges:=False

    MsgBox "Done! New file saved as: " & outputPath, vbInformation

End Sub